{"version":3,"sources":["FormSampleOptions/FormSampleOptions.js","EnterSampleData/EnterSampleData.js","CalculationDisplay/CalculationDisplay.js","Util/Sampler.js","App/App.js","serviceWorker.js","index.js"],"names":["FormSampleOptions","props","stateProps","rp","renderProps","sp","react_default","a","createElement","onSubmit","handleOptionSubmit","className","type","name","min","max","Number","value","rangeMin","onFocus","handleFocus","onChange","handleOptionChange","rangeMax","disabled","Math","sampleSize","EnterSampleData","sampleArr","onClick","handleBackOne","id","handleChangeInputsRequired","checked","requiredChecked","htmlFor","handleDataCalculation","map","item","key","step","handleDataInput","dataInput","required","CalculationDisplay","num","dataMean","isInteger","abs","concat","toFixed","toPrecision","Sampler","size","len","rand","digitsArr","sampleDigits","i","push","length","floor","random","cutDigit","splice","steps","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","handleForwardOne","e","preventDefault","setState","currentRequired","data","objectSpread","keys","valsArr","values","count","filter","el","undefined","mean","reduce","acc","toString","target","appendState","val","select","index","indexOf","next","defineProperty","_this$state","src_FormSampleOptions_FormSampleOptions","src_EnterSampleData_EnterSampleData","src_CalculationDisplay_CalculationDisplay","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c03211c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './FormSampleOptions.css'\r\n\r\nconst FormSampleOptions = (props) => {\r\n\tlet { stateProps, renderProps } = props\r\n\tlet rp = renderProps\r\n\tlet sp = stateProps\r\n\r\n\treturn (\r\n\t\t<form onSubmit={rp.handleOptionSubmit} className=\"form-sample-options\">\r\n\t\t\t<div className=\"center-half\">\r\n\t\t\t\t<label className=\"half-left\">Min</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tname=\"rangeMin\"\r\n\t\t\t\t\tclassName=\"half-right\"\r\n\t\t\t\t\tmin={1}\r\n\t\t\t\t\tmax={Number(1e10)}\r\n\t\t\t\t\tvalue={sp.rangeMin}\r\n\t\t\t\t\tonFocus={rp.handleFocus}\r\n\t\t\t\t\tonChange={rp.handleOptionChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"center-half\">\r\n\t\t\t\t<label className=\"half-left\">Max</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tname=\"rangeMax\"\r\n\t\t\t\t\tclassName=\"half-right\"\r\n\t\t\t\t\tmin={sp.rangeMin + 1 || 1}\r\n\t\t\t\t\tmax={Number(1e10)}\r\n\t\t\t\t\tvalue={sp.rangeMax}\r\n\t\t\t\t\tdisabled={!sp.rangeMin}\r\n\t\t\t\t\tonFocus={rp.handleFocus}\r\n\t\t\t\t\tonChange={rp.handleOptionChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"center-half\">\r\n\t\t\t\t<label className=\"half-left\">Sample size</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tname=\"sampleSize\"\r\n\t\t\t\t\tclassName=\"half-right\"\r\n\t\t\t\t\tmin={1}\r\n\t\t\t\t\tmax={Math.min(sp.rangeMax - sp.rangeMin - 1, 999)}\r\n\t\t\t\t\tvalue={sp.sampleSize}\r\n\t\t\t\t\tdisabled={!sp.rangeMax}\r\n\t\t\t\t\tonFocus={rp.handleFocus}\r\n\t\t\t\t\tonChange={rp.handleOptionChange}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<input type=\"submit\" className=\"btn-submit\" value=\"Get Sample\" />\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default FormSampleOptions\r\n","import React from 'react'\r\nimport './EnterSampleData.css'\r\n\r\nconst EnterSampleData = (props) => {\r\n\tlet { stateProps, renderProps } = props\r\n\tlet sp = stateProps\r\n\tlet rp = renderProps\r\n\tlet sampleArr = sp.sampleArr\r\n\r\n\treturn (\r\n\t\t<div className=\"output\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tvalue=\"New Sample\"\r\n\t\t\t\tclassName=\"btn-back\"\r\n\t\t\t\tonClick={rp.handleBackOne}\r\n\t\t\t/>\r\n\t\t\t<fieldset>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tname=\"getRequired\"\r\n\t\t\t\t\tid=\"getRequired\"\r\n\t\t\t\t\tvalue=\"All inputs required\"\r\n\t\t\t\t\tonChange={rp.handleChangeInputsRequired}\r\n\t\t\t\t\tchecked={sp.requiredChecked}\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor=\"getRequired\">All inputs required</label>\r\n\t\t\t</fieldset>\r\n\t\t\t<form onSubmit={rp.handleDataCalculation}>\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{sampleArr.map((item) => {\r\n\t\t\t\t\t\t\tlet key = 'id' + item\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={key} className=\"center\">\r\n\t\t\t\t\t\t\t\t\t<td className=\"data-sample-id\">{item}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\t\t\t\tstep=\"any\"\r\n\t\t\t\t\t\t\t\t\t\t\tid={key}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"data-input\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={rp.handleDataInput}\r\n\t\t\t\t\t\t\t\t\t\t\tonFocus={rp.handleFocus}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={sp.dataInput.key}\r\n\t\t\t\t\t\t\t\t\t\t\trequired={sp.requiredChecked}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tclassName=\"btn-calculate\"\r\n\t\t\t\t\tvalue=\"Calculate\"\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default EnterSampleData\r\n","import React from 'react';\r\n// import './FormSampleOptions.css'\r\n\r\n\r\nconst CalculationDisplay = (props) => {\r\n\r\n  let { stateProps } = props\r\n  let sp = stateProps\r\n  // let rp = renderProps\r\n\r\n  function formatNumber(num) {\r\n    // num is 0\r\n    // num is whole\r\n    // num is decimal > 0\r\n    // num is decimal < 0\r\n\r\n    if (num === 0) {\r\n      return 0\r\n    } else if (Number.isInteger(num)) {\r\n      return num\r\n    } else if (Math.abs(num) > 1) {\r\n      return `${num.toFixed(2)} (2dp)`\r\n    } else if (Math.abs(num) < 1) {\r\n      return `${num.toPrecision(4)} (4sf)`\r\n    } else {\r\n      return 'There is an error. Please report to admin.'\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        (sp.dataMean && typeof sp.dataMean === 'number' && (\r\n          <p>The mean is {formatNumber(sp.dataMean)}</p>\r\n        )) || (sp.dataMean && (\r\n          <p>Cannot calculate with given input</p>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalculationDisplay","export default {\r\n  RangeSample: (min, max, size) => {\r\n    let len = 0\r\n    let rand = 0\r\n    let digitsArr = []\r\n    let sampleDigits = []\r\n\r\n    // make an array of digits min to max\r\n    for (let i = min; i <= max; i++) {\r\n      digitsArr.push(i)\r\n    }\r\n\r\n    len = digitsArr.length\r\n\r\n    // Cut digits from Array one-by-one\r\n    for (let i = 0; i < size; i++) {\r\n      // generate rand * len\r\n      rand = Math.floor(Math.random() * len)\r\n      // remove items from digits array\r\n      let cutDigit = digitsArr.splice(rand, 1)[0]\r\n      sampleDigits.push(cutDigit)\r\n      len--\r\n    }\r\n\r\n    return sampleDigits\r\n  }\r\n}","import React, { Component } from 'react'\nimport FormSampleOptions from '../FormSampleOptions/FormSampleOptions'\nimport EnterSampleData from '../EnterSampleData/EnterSampleData'\nimport CalculationDisplay from '../CalculationDisplay/CalculationDisplay'\nimport Sampler from '../Util/Sampler'\nimport './App.css'\n\nconst steps = [ 'FormSampleOptions', 'EnterSampleData', 'DisplayStatistics' ]\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\trangeMin: '',\n\t\t\trangeMax: '',\n\t\t\tsampleSize: '',\n\t\t\tsampleArr: [],\n\t\t\tdataInput: {},\n\t\t\tdataMean: '',\n\t\t\trequiredChecked: true,\n\t\t\tstep: 'FormSampleOptions'\n\t\t}\n\n\t\tthis.handleBackOne = this.handleBackOne.bind(this)\n\t\tthis.handleForwardOne = this.handleForwardOne.bind(this)\n\t\tthis.handleDataCalculation = this.handleDataCalculation.bind(this)\n\t\tthis.handleDataInput = this.handleDataInput.bind(this)\n\t\tthis.handleOptionChange = this.handleOptionChange.bind(this)\n\t\tthis.handleOptionSubmit = this.handleOptionSubmit.bind(this)\n\t\tthis.handleChangeInputsRequired = this.handleChangeInputsRequired.bind(\n\t\t\tthis\n\t\t)\n\t}\n\n\thandleBackOne(e) {\n\t\tif (e) e.preventDefault()\n\t\t// let index = steps.indexOf(this.state.step)\n\t\t// let prev = steps[index - 1]\n\t\tthis.setState({ dataInput: {} })\n\t\tthis.setState({ dataMean: null })\n\t\tthis.setState({ step: 'FormSampleOptions' })\n\t}\n\n\thandleChangeInputsRequired(e) {\n\t\tconst currentRequired = this.state.requiredChecked\n\t\tthis.setState({ requiredChecked: !currentRequired })\n\t}\n\n\thandleDataCalculation(e) {\n\t\te.preventDefault()\n\t\tconst data = { ...this.state.dataInput }\n\t\tlet keys = Object.keys(data)\n\t\tlet valsArr = Object.values(data)\n\t\tvalsArr = valsArr.filter((el) => {\n\t\t\treturn el !== undefined\n\t\t})\n\t\tconst count = valsArr.length\n\n\t\tlet sum = keys.reduce((acc, key) => {\n\t\t\tif (data[key] === undefined) {\n\t\t\t\treturn acc\n\t\t\t}\n\t\t\treturn acc + Number(data[key])\n\t\t}, 0)\n\t\tlet mean = sum / count\n\t\tif (typeof mean === 'number' && mean.toString() !== 'NaN') {\n\t\t\tthis.setState({ dataMean: mean })\n\t\t} else {\n\t\t\tthis.setState({ dataMean: 'Calculation Error' })\n\t\t}\n\t\tthis.setState({ step: 'showCalculation' })\n\t}\n\n\thandleDataInput(e) {\n\t\te.preventDefault()\n\t\tconst id = e.target.id\n\t\tconst appendState = this.state.dataInput\n\t\tlet val = e.target.value\n\t\tif (val === '') {\n\t\t\tval = undefined\n\t\t}\n\n\t\tappendState[id] = val\n\t\tthis.setState({ dataInput: appendState })\n\t}\n\n\thandleFocus(e) {\n\t\te.preventDefault()\n\t\te.target.select()\n\t}\n\n\thandleForwardOne() {\n\t\tlet step = this.state.step\n\t\tlet index = steps.indexOf(step)\n\t\tlet next = steps[index + 1]\n\t\tnext && this.setState({ step: next })\n\t}\n\n\thandleOptionChange(e) {\n\t\te.preventDefault()\n\t\tconst key = e.target.name\n\t\tconst value = Number(e.target.value)\n\t\tthis.setState({ [key]: value })\n\t}\n\n\thandleOptionSubmit(e) {\n\t\te.preventDefault()\n\t\tconst { rangeMin, rangeMax, sampleSize } = this.state\n\t\tconst allInputsEntered = rangeMin && rangeMax && sampleSize\n\t\tif (!allInputsEntered) {\n\t\t\treturn\n\t\t}\n\t\tconst sampleArr = Sampler.RangeSample(rangeMin, rangeMax, sampleSize)\n\t\tthis.setState({ sampleArr: sampleArr })\n\t\tthis.handleForwardOne()\n\t}\n\n\trender() {\n\t\tlet renderProps = {\n\t\t\thandleFocus: this.handleFocus,\n\t\t\thandleBackOne: this.handleBackOne,\n\t\t\thandleChangeInputsRequired: this.handleChangeInputsRequired,\n\t\t\thandleDataCalculation: this.handleDataCalculation,\n\t\t\thandleDataInput: this.handleDataInput,\n\t\t\thandleOptionChange: this.handleOptionChange,\n\t\t\thandleOptionSubmit: this.handleOptionSubmit\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h2>Sampler</h2>\n\t\t\t\t<div className=\"intro\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Generate a simple random sample from a range</li>\n\t\t\t\t\t\t<li>Enter data for each sample</li>\n\t\t\t\t\t\t<li>Calculate the mean</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t{this.state.step === 'FormSampleOptions' && (\n\t\t\t\t\t<FormSampleOptions\n\t\t\t\t\t\trenderProps={renderProps}\n\t\t\t\t\t\tstateProps={this.state}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{(this.state.step === 'EnterSampleData' ||\n\t\t\t\t\tthis.state.step === 'showCalculation') && (\n\t\t\t\t\t<EnterSampleData\n\t\t\t\t\t\trenderProps={renderProps}\n\t\t\t\t\t\tstateProps={this.state}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{this.state.step === 'showCalculation' && (\n\t\t\t\t\t<CalculationDisplay\n\t\t\t\t\t\trenderProps={renderProps}\n\t\t\t\t\t\tstateProps={this.state}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}